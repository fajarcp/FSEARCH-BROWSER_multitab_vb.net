<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADgtV4A4LVeE+C1XjrgtV4+4LVeUeC1XlTgtV4p4LVeUOC1XlrgtV5X4LVeXOC1
        Xi7gtV454LVeU+C1XlXgtV5U4LVeIeC1XkzgtV5c4LVeVeC1Xl/gtV5I4LVeP+C1Xk7gtV4S4LVeAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOC1XgDgtV4Q4LVeSuC1XkjgtV5U4LVeW+C1XjPgtV404LVeU+C1
        XlDgtV5J4LVeKeC1XkXgtV5A4LVeT+C1XkvgtV4i4LVeROC1XlPgtV5H4LVeUuC1XkXgtV434LVeUOC1
        Xg3gtV4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4LVeAOC1XhDgtV5B4LVeHeC1XhLgtV4Q4LVeC+C1
        Xg3gtV4S4LVeEOC1Xi/gtV4n4LVeP+C1XhngtV4O4LVeHOC1XhDgtV4O4LVeEOC1XhHgtV4R4LVeEuC1
        XingtV4r4bVeAeC1XgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgtV4A4LVeAuC1XgngtV4C4LVeAAAA
        AAAAAAAAAAAAAAAAAADgtV4A4LVeBeC1XgXgtV4J4LVeAuC1XgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADgtV4A4LVeBOC1XgTgtV4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4LVeAOC1XgPgtV4f4LVeC+C1Xh3gtV4Z4LVeIOC1XijgtV4g4LVeD+C1XiPgtV4c4LVeFeC1
        XhbgtV4l4LVeHOC1XhPgtV4c4LVeBOC1XgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AH//////////////P////B////AP///wB///4Af//+AH///gA///wAP//8AD///AA///wAP//8AD///A
        A///4Af//+AH///wB///+A////wf//////8=
</value>
  </data>
</root>